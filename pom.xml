<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sonicle.webtop</groupId>
	<artifactId>webtop-core</artifactId>
	<version>5.17.3</version>
	<packaging>jar</packaging>
	<name>webtop-core</name>
	
	<parent>
		<groupId>com.sonicle.webtop</groupId>
		<artifactId>webtop-superpom-core</artifactId>
		<version>9</version>
	</parent>
	
	<properties>
		<webtop.service.i18n.languages>en,it,es,fr,de,hr,hu</webtop.service.i18n.languages>
		<webtop.service.i18n.tx.push.languages>it</webtop.service.i18n.tx.push.languages>
		<webtop.service.i18n.tx.pull.languages>es,fr,de,hr,hu</webtop.service.i18n.tx.pull.languages>
		<webtop.service.restApi.oas>openapi-v1.json</webtop.service.restApi.oas>
		<!-- SENCHA -->
		<sencha.properties.target>sencha75</sencha.properties.target>
	</properties>
	
	<repositories>
		<repository>
			<id>jr-ce-releases</id>
			<url>https://jaspersoft.jfrog.io/artifactory/jr-ce-releases/</url>
			<!-- Deprecated URL -->
			<!--<url>https://jaspersoft.jfrog.io/jaspersoft/jr-ce-releases</url>-->
		</repository>
		<repository>
			<id>jr-ce-3rd-party</id>
			<url>https://jaspersoft.jfrog.io/artifactory/third-party-ce-artifacts/</url>
			<!-- Deprecated URL -->
			<!--<url>https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts/</url>-->
		</repository>
		<repository>
			<id>52north-releases</id>
			<url>http://52north.org/maven/repo/releases/</url>
		</repository>
		<repository>
			<id>license4j-releases</id>
			<url>https://www.license4j.com/maven/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
		</repository>
	</repositories>
	
	<dependencies>
		<!-- 3rd party libraries -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		http://www.slf4j.org/legacy.html#jul-to-slf4j
		-->
		<!--
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		-->
		<dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
		<dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>joda-to-java-time-bridge</artifactId>
            <version>3</version>
        </dependency>
		<dependency>
			<!-- Force version from jakarta (same in swagger-core) -->
			<!--
				This needs a review for JDK > 1.8 due a breaking removal!
				https://stackoverflow.com/questions/46493613/what-is-the-replacement-for-javax-activation-package-in-java-9
				https://docs.axelor.com/adk/6.0/migration.html
				https://github.com/jakartaee/jaf-api/issues/33
			-->
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <version>1.2.2</version>
        </dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
			<exclusions>
				<exclusion>
					<!-- Block old javax.activation-api-1.2.0.jar coming transitively from jaxb-api -->
					<groupId>javax.activation</groupId>
					<artifactId>javax.activation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikaricp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-jaxrs</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-runtime</artifactId>
			<version>${atmosphere.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.10.2</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-jaxrs2</artifactId>
			<version>${swagger.version}</version>
			<exclusions>
				<exclusion>
					<!-- Make sure to use latest activation-api version above -->
					<groupId>jakarta.activation</groupId>
					<artifactId>jakarta.activation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.swagger.parser.v3</groupId>
			<artifactId>swagger-parser</artifactId>
			<version>2.1.9</version>
			<exclusions>
				<exclusion>
					<!-- Block old mailapi.1.6.2.jar coming from transitive dependency -->
					<groupId>com.sun.mail</groupId>
					<artifactId>mailapi</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<!-- Needed by some legacy projects -->
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
			<version>${commons-configuration2.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!-- Optional for above commons-configuration2 -->
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons-beanutils.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient-contrib-ssl</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.3</version>
		</dependency>
		<dependency>
			<groupId>net.sf.uadetector</groupId>
			<artifactId>uadetector-core</artifactId>
			<version>0.9.20</version>
		</dependency>
		<dependency>
			<groupId>net.sf.uadetector</groupId>
			<artifactId>uadetector-resources</artifactId>
			<version>2014.08</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.uuid</groupId>
			<artifactId>java-uuid-generator</artifactId>
			<version>3.1.4</version>
		</dependency>
		<dependency>
			<groupId>com.aventrix.jnanoid</groupId>
			<artifactId>jnanoid</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.20</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>net.glxn.qrgen</groupId>
			<artifactId>core</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.glxn.qrgen</groupId>
			<artifactId>javase</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.engio</groupId>
			<artifactId>mbassador</artifactId>
			<version>${mbassador.version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
			<exclusions>
				<exclusion>
					<groupId>c3p0</groupId>
					<artifactId>c3p0</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sf.supercsv</groupId>
			<artifactId>super-csv</artifactId>
			<version>${super-csv.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.supercsv</groupId>
			<artifactId>super-csv-joda</artifactId>
			<version>${super-csv.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mnode.ical4j</groupId>
			<artifactId>ical4j</artifactId>
			<version>${ical4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.ez-vcard</groupId>
			<artifactId>ez-vcard</artifactId>
			<version>${ez-vcard.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jsoup</groupId>
					<artifactId>jsoup</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.freemarker</groupId>
					<artifactId>freemarker</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<!-- Old JasperReports 6.3 -->
		<!--
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.3.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-fonts</artifactId>
			<version>6.0.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-functions</artifactId>
			<version>6.3.0</version>
		</dependency>
		-->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.15.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-fonts</artifactId>
			<version>6.15.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-functions</artifactId>
			<version>6.15.0</version>
		</dependency>
		<dependency>
			<!-- Needed by Jasper for dealing with SVGs -->
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-bridge</artifactId>
            <version>1.14</version>
        </dependency>
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-java8</artifactId>
			<version>${smack.version}</version>
		</dependency>
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-tcp</artifactId>
			<version>${smack.version}</version>
		</dependency>
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-im</artifactId>
			<version>${smack.version}</version>
		</dependency>
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-extensions</artifactId>
			<version>${smack.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jsonwebtoken.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jsonwebtoken.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${jsonwebtoken.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.mashape.unirest</groupId>
			<artifactId>unirest-java</artifactId>
			<version>1.4.9</version>
		</dependency>	
		<dependency>
			<groupId>com.twilio.sdk</groupId>
			<artifactId>twilio</artifactId>
			<version>7.22.2</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.jsonwebtoken</groupId>
					<artifactId>jjwt</artifactId>
				</exclusion>
			</exclusions>
		</dependency>			
		<dependency>
			<groupId>com.license4j</groupId>
			<artifactId>license4j-runtime-library</artifactId>
			<version>${license4j.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.com.robust-it</groupId>
			<artifactId>cloning</artifactId>
			<version>${cloning.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>${caffeine.version}</version>
		</dependency>
		
		<!-- WebTop libraries -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>webtop-core-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sonicle.extjs</groupId>
			<artifactId>sonicle-extjs</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sonicle.extjs</groupId>
			<artifactId>sonicle-extjs-extensions</artifactId>
			<version>[3.0.0,4.0.0)</version>
		</dependency>
		<dependency>
			<groupId>com.sonicle.libraries</groupId>
			<artifactId>sonicle-commons</artifactId>
			<version>LATEST</version>
		</dependency>
		<dependency>
			<groupId>com.sonicle.libraries</groupId>
			<artifactId>sonicle-commons-web</artifactId>
			<version>LATEST</version>
		</dependency>
		<dependency>
			<groupId>com.sonicle.libraries</groupId>
			<artifactId>sonicle-security</artifactId>
			<version>LATEST</version>
		</dependency>
		<dependency>
			<groupId>com.sonicle.libraries</groupId>
			<artifactId>sonicle-mail</artifactId>
			<version>LATEST</version>
		</dependency>
		<dependency>
			<groupId>com.sonicle.libraries</groupId>
			<artifactId>sonicle-vfs2</artifactId>
			<version>LATEST</version>
		</dependency>
		<dependency>
            <groupId>com.sonicle.webtop</groupId>
            <artifactId>webtop-vfs-api</artifactId>
            <version>LATEST</version>
			<scope>provided</scope>
        </dependency>
	</dependencies>
	
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>client-copy-boot</id>
						<phase>none</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy todir="${project.build.outputDirectory}/client/${webtop.service.package}/boot">
									<fileset dir="src/main/client-boot">
										<include name="**/*.js"/>
									</fileset>
									<globmapper from="*.js" to="*-debug.js"/>
								</copy>
							</target>	
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<!-- Done using minify-maven-plugin -->
					<!--
					<execution>
						<id>client-copy-core-src</id>
						<phase>none</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/client/${webtop.service.package}/src</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/client-core</directory>
									<excludes>
										<exclude>**/laf/**</exclude>
										<exclude>*.properties</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/main/client-core-private</directory>
								</resource>
								<resource>
									<directory>src/main/client-core-public</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					-->
					<execution>
						<id>client-copy-core-laf</id>
						<phase>none</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/client/${webtop.service.package}/laf</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/client-core/laf</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>client-copy-core-locale</id>
						<phase>none</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/client/${webtop.service.package}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/client-core</directory>
									<includes>
										<include>*.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- Done using minify-maven-plugin -->
					<!--
					<execution>
						<id>client-copy-admin-src</id>
						<phase>none</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/client/${webtop.service.package}.admin/src</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/client-admin</directory>
									<excludes>
										<exclude>**/laf/**</exclude>
										<exclude>*.properties</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					-->
					<execution>
						<id>client-copy-admin-laf</id>
						<phase>none</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/client/${webtop.service.package}.admin/laf</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/client-admin/laf</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>client-copy-admin-locale</id>
						<phase>none</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/client/${webtop.service.package}.admin</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/client-admin</directory>
									<includes>
										<include>*.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>client-copy-resources</id>
						<phase>none</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/client/${webtop.service.package}/resources</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/client-resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.sonicle.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>${minify-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>client-minify-boot</id>
						<phase>none</phase>
						<goals>
							<goal>minify</goal>
						</goals>
						<configuration>
							<jsEngine>YUI</jsEngine>
							<nosuffix>true</nosuffix>
							<skipMerge>true</skipMerge>
							<jsSourceDir>client-boot</jsSourceDir>
							<jsTargetDir>client/${webtop.service.package}/boot</jsTargetDir>
							<jsSourceIncludes>
								<jsSourceInclude>**/*.js</jsSourceInclude>
							</jsSourceIncludes>
						</configuration>
					</execution>
					<execution>
						<id>client-copy-core-src</id>
						<phase>none</phase>
						<goals>
							<goal>minify</goal>
						</goals>
						<configuration>
							<jsEngine>CLEANER</jsEngine>
							<cleanerRemoveSingleLineComments>false</cleanerRemoveSingleLineComments>
							<skipMerge>true</skipMerge>
							<nosuffix>true</nosuffix>
							<jsSourceDir>client-core</jsSourceDir>
							<jsTargetDir>client/${webtop.service.package}/src</jsTargetDir>
							<jsSourceIncludes>
								<jsSourceInclude>**/*.js</jsSourceInclude>
							</jsSourceIncludes>
						</configuration>
					</execution>
					<execution>
						<id>client-copy-core-private-src</id>
						<phase>none</phase>
						<goals>
							<goal>minify</goal>
						</goals>
						<configuration>
							<jsEngine>CLEANER</jsEngine>
							<skipMerge>true</skipMerge>
							<nosuffix>true</nosuffix>
							<jsSourceDir>client-core-private</jsSourceDir>
							<jsTargetDir>client/${webtop.service.package}/src</jsTargetDir>
							<jsSourceIncludes>
								<jsSourceInclude>**/*.js</jsSourceInclude>
							</jsSourceIncludes>
						</configuration>
					</execution>
					<execution>
						<id>client-copy-core-public-src</id>
						<phase>none</phase>
						<goals>
							<goal>minify</goal>
						</goals>
						<configuration>
							<jsEngine>CLEANER</jsEngine>
							<skipMerge>true</skipMerge>
							<nosuffix>true</nosuffix>
							<jsSourceDir>client-core-public</jsSourceDir>
							<jsTargetDir>client/${webtop.service.package}/src</jsTargetDir>
							<jsSourceIncludes>
								<jsSourceInclude>**/*.js</jsSourceInclude>
							</jsSourceIncludes>
						</configuration>
					</execution>
					<execution>
						<id>client-copy-admin-src</id>
						<phase>none</phase>
						<goals>
							<goal>minify</goal>
						</goals>
						<configuration>
							<jsEngine>CLEANER</jsEngine>
							<skipMerge>true</skipMerge>
							<nosuffix>true</nosuffix>
							<jsSourceDir>client-admin</jsSourceDir>
							<jsTargetDir>client/${webtop.service.package}.admin/src</jsTargetDir>
							<jsSourceIncludes>
								<jsSourceInclude>**/*.js</jsSourceInclude>
							</jsSourceIncludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--
			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>${minify-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>client-copy-boot</id>
						<phase>none</phase>
						<goals>
							<goal>minify</goal>
						</goals>
						<configuration>
							<nosuffix>true</nosuffix>
							<skipMerge>true</skipMerge>
							<jsSourceDir>client-boot</jsSourceDir>
							<jsTargetDir>client/${webtop.service.package}/boot</jsTargetDir>
							<jsSourceIncludes>
								<jsSourceInclude>**/*.js</jsSourceInclude>
							</jsSourceIncludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			-->
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>generate-restapi-classes</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>${maven-clean-plugin.version}</version>
						<executions>
							<execution>
								<id>clean-gen-swagger</id>
								<phase>clean</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<id>build-properties</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<!-- Supports OpenApi v2 spec, but StopLight editor is buggy with OpenApi v2 spec -->
					<!--
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-codegen-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>generate-oas-classes</id>
								<phase>generate-sources</phase>
							</execution>
						</executions>
					</plugin>
					-->
					
					<!-- Supports OpenApi v2/v3 spec, but generated code is buggy and some imports are missing -->
					<!--
						Resource classes:
							- import io.swagger.annotations.*;
							+ import io.swagger.annotations.Api;
							+ import io.swagger.v3.oas.annotations.*;
							+ import io.swagger.v3.oas.annotations.media.*;
							+ import io.swagger.v3.oas.annotations.responses.*;
							+ import io.swagger.v3.oas.annotations.security.*;
						
						Model classes:
							+ import com.fasterxml.jackson.annotation.JsonCreator;
							+ import com.fasterxml.jackson.annotation.JsonValue;
					-->
					<!--
					<plugin>
						<groupId>io.swagger.codegen.v3</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-codegen-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>generate-oas-classes</id>
								<phase>generate-sources</phase>
							</execution>
						</executions>
					</plugin>
					-->
					<!-- Supports OpenApi v2/v3 spec -->
					<plugin>
						<groupId>org.openapitools</groupId>
						<artifactId>openapi-generator-maven-plugin</artifactId>
						<version>${openapi-generator-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>generate-oas-classes</id>
								<phase>generate-sources</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>profile-development</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<webtop.service.buildType>dev</webtop.service.buildType>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>${properties-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>read-sencha-properties</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<id>client-copy-boot</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>replace-manifest-variables</id>
								<phase>prepare-package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>${maven-resources-plugin.version}</version>
						<executions>
							<!--
							<execution>
								<id>client-copy-core-src</id>
								<phase>process-resources</phase>
							</execution>
							-->
							<execution>
								<id>client-copy-core-laf</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-core-locale</id>
								<phase>process-resources</phase>
							</execution>
							<!--
							<execution>
								<id>client-copy-admin-src</id>
								<phase>process-resources</phase>
							</execution>
							-->
							<execution>
								<id>client-copy-admin-laf</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-admin-locale</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-resources</id>
								<phase>process-resources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.sonicle.maven</groupId>
						<artifactId>minify-maven-plugin</artifactId>
						<version>${minify-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>client-minify-boot</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-core-src</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-core-private-src</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-core-public-src</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-admin-src</id>
								<phase>process-resources</phase>
							</execution>
						</executions>
					</plugin>
					<!--
					<plugin>
						<groupId>com.samaxes.maven</groupId>
						<artifactId>minify-maven-plugin</artifactId>
						<version>${minify-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>client-copy-boot</id>
								<phase>process-resources</phase>
							</execution>
						</executions>
					</plugin>
					-->
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>profile-production</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<webtop.service.buildType>prod</webtop.service.buildType>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>${properties-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>read-sencha-properties</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<id>build-properties</id>
								<phase>validate</phase>
							</execution>
							<execution>
								<id>client-copy-boot</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>replace-manifest-variables</id>
								<phase>prepare-package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>${maven-resources-plugin.version}</version>
						<executions>
							<!-- Done using minify-maven-plugin -->
							<!--
							<execution>
								<id>client-copy-core-src</id>
								<phase>process-resources</phase>
							</execution>
							-->
							<execution>
								<id>client-copy-core-laf</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-core-locale</id>
								<phase>process-resources</phase>
							</execution>
							<!-- Done using minify-maven-plugin -->
							<!--
							<execution>
								<id>client-copy-admin-src</id>
								<phase>process-resources</phase>
							</execution>
							-->
							<execution>
								<id>client-copy-admin-laf</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-admin-locale</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-resources</id>
								<phase>process-resources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.sonicle.maven</groupId>
						<artifactId>minify-maven-plugin</artifactId>
						<version>${minify-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>client-minify-boot</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-core-src</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-core-private-src</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-core-public-src</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>client-copy-admin-src</id>
								<phase>process-resources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>client-compile-core-private</id>
								<phase>compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${sencha.cmd}/${sencha.cmd.exec}</executable>
									<workingDirectory>${project.basedir}/src/main</workingDirectory>
									<arguments>
										<argument>${sencha.cmd.exec.args}</argument>
										<argument>--sdk-path=${sencha.workspace}/ext</argument>
										<argument>config</argument>
										<argument>-prop</argument>
										<argument>toolkit.name=classic</argument>
										<argument>-prop</argument>
										<argument>build.id=classic</argument>
										<argument>-prop</argument>
										<argument>build.name=classic</argument>
										<argument>then</argument>
										<argument>compile</argument>
										<argument>--classpath=${sencha.compile.classpath}</argument>
										<argument>--classpath=${sencha.compile.wt.classpath}</argument>
										<argument>--classpath=client-core,client-core-private</argument>
										<argument>exclude</argument>
										<argument>-all</argument>
										<argument>and</argument>
										<argument>include</argument>
										<argument>--namespace=Sonicle.webtop.core.*</argument>
										<argument>and</argument>
										<argument>concatenate</argument>
										<argument>--input-js-version=ANY</argument>
										<argument>--js-version=ANY</argument>
										<argument>--remove-text-references</argument>
										<argument>--compress</argument>
										<argument>--output-file=${project.build.outputDirectory}/client/${webtop.service.package}/${webtop.service.package}-private.js</argument>
										<argument>and</argument>
										<argument>concatenate</argument>
										<argument>--input-js-version=ANY</argument>
										<argument>--js-version=ANY</argument>
										<argument>--remove-text-references</argument>
										<argument>--strip-comments</argument>
										<argument>--output-file=${project.build.outputDirectory}/client/${webtop.service.package}/${webtop.service.package}-private-debug.js</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>client-compile-core-public</id>
								<phase>compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${sencha.cmd}/${sencha.cmd.exec}</executable>
									<workingDirectory>${project.basedir}/src/main</workingDirectory>
									<arguments>
										<argument>${sencha.cmd.exec.args}</argument>
										<argument>--sdk-path=${sencha.workspace}/ext</argument>
										<argument>config</argument>
										<argument>-prop</argument>
										<argument>toolkit.name=classic</argument>
										<argument>-prop</argument>
										<argument>build.id=classic</argument>
										<argument>-prop</argument>
										<argument>build.name=classic</argument>
										<argument>then</argument>
										<argument>compile</argument>
										<argument>--classpath=${sencha.compile.classpath}</argument>
										<argument>--classpath=${sencha.compile.wt.classpath}</argument>
										<argument>--classpath=client-core,client-core-public</argument>
										<argument>exclude</argument>
										<argument>-all</argument>
										<argument>and</argument>
										<argument>include</argument>
										<argument>--namespace=Sonicle.webtop.core.app.*,Sonicle.webtop.core.PublicService</argument>
										<argument>and</argument>
										<argument>concatenate</argument>
										<argument>--input-js-version=ANY</argument>
										<argument>--js-version=ANY</argument>
										<argument>--remove-text-references</argument>
										<argument>--compress</argument>
										<argument>--output-file=${project.build.outputDirectory}/client/${webtop.service.package}/${webtop.service.package}-public.js</argument>
										<argument>and</argument>
										<argument>concatenate</argument>
										<argument>--input-js-version=ANY</argument>
										<argument>--js-version=ANY</argument>
										<argument>--remove-text-references</argument>
										<argument>--strip-comments</argument>
										<argument>--output-file=${project.build.outputDirectory}/client/${webtop.service.package}/${webtop.service.package}-public-debug.js</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>client-compile-admin</id>
								<phase>compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${sencha.cmd}/${sencha.cmd.exec}</executable>
									<workingDirectory>${project.basedir}/src/main</workingDirectory>
									<arguments>
										<argument>${sencha.cmd.exec.args}</argument>
										<argument>--sdk-path=${sencha.workspace}/ext</argument>
										<argument>config</argument>
										<argument>-prop</argument>
										<argument>toolkit.name=classic</argument>
										<argument>-prop</argument>
										<argument>build.id=classic</argument>
										<argument>-prop</argument>
										<argument>build.name=classic</argument>
										<argument>then</argument>
										<argument>compile</argument>
										<argument>--classpath=${sencha.compile.classpath}</argument>
										<argument>--classpath=${sencha.compile.wt.classpath}</argument>
										<argument>--classpath=client-core,client-admin</argument>
										<argument>exclude</argument>
										<argument>-all</argument>
										<argument>and</argument>
										<argument>include</argument>
										<argument>--namespace=Sonicle.webtop.core.admin.*</argument>
										<argument>and</argument>
										<argument>concatenate</argument>
										<argument>--input-js-version=ANY</argument>
										<argument>--js-version=ANY</argument>
										<argument>--remove-text-references</argument>
										<argument>--compress</argument>
										<argument>--output-file=${project.build.outputDirectory}/client/${webtop.service.package}.admin/${webtop.service.package}.admin.js</argument>
										<argument>and</argument>
										<argument>concatenate</argument>
										<argument>--input-js-version=ANY</argument>
										<argument>--js-version=ANY</argument>
										<argument>--remove-text-references</argument>
										<argument>--strip-comments</argument>
										<argument>--output-file=${project.build.outputDirectory}/client/${webtop.service.package}.admin/${webtop.service.package}.admin-debug.js</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>transifex-push</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>transifex-push-sources</id>
								<phase>process-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>tx</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>push</argument>
										<argument>-s</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>transifex-push-translation</id>
								<phase>process-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>tx</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>push</argument>
										<argument>-t</argument>
										<argument>-l</argument>
										<argument>${webtop.service.i18n.tx.push.languages}</argument>
										<argument>-f</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>transifex-pull</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>transifex-pull-translation</id>
								<phase>process-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>tx</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>pull</argument>
										<argument>-l</argument>
										<argument>${webtop.service.i18n.tx.pull.languages}</argument>
										<argument>-f</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>native2ascii-maven-plugin</artifactId>
						<version>2.0.0</version>
						<executions>
							<execution>
								<id>escape-i18n-properties</id>
								<phase>process-sources</phase>
								<goals>
									<goal>inplace</goal>
								</goals>
								<configuration>
									<dir>${project.basedir}</dir>
									<encoding>ISO-8859-1</encoding>
									<excludes>
										<exclude>**/*_en.properties</exclude>
										<exclude>**/*_it.properties</exclude>
									</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
